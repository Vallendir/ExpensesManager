buildscript {
    ext {
        /** Swagger **/
        swaggerVersion = '2.9.2'
        swaggerRFCVersion = '1.0.0'
        swaggerExcludedForNewestVersion = '1.5.21'
        ioGithubSwagger2MarkupVersion = '1.3.3'
        asciiDoctorGradlePluginVersion = '1.5.9.2'
        asciiDoctorJPDFVersion = '1.5.0-alpha.16'
        benjaminsprouleVersion = '1.0.4'
    }

    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        /** Swagger **/
        classpath "io.github.swagger2markup:swagger2markup-spring-restdocs-ext:$ioGithubSwagger2MarkupVersion"
        classpath "io.github.swagger2markup:swagger2markup-gradle-plugin:$ioGithubSwagger2MarkupVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciiDoctorGradlePluginVersion"
        classpath "org.asciidoctor:asciidoctorj-pdf:$asciiDoctorJPDFVersion"
        classpath "com.benjaminsproule.swagger:com.benjaminsproule.swagger.gradle.plugin:$benjaminsprouleVersion"
    }
}

ext {
    pathToBuildDocumentation = "${project.buildDir}/documentation/docs/asciidoc"
    pathToRootDocumentation = "${project.rootDir}/documentation/docs/asciidoc"

    pathToSwaggerJson = file("$pathToBuildDocumentation/swagger-json")
    pathToAsciidoc = file("$pathToBuildDocumentation/generated")
    pathToSnippets = file("$pathToBuildDocumentation/snippets")

    swagger_task = file("swagger-task.gradle")
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.benjaminsproule.swagger'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'io.github.swagger2markup'
apply from: swagger_task

List toExcludeFromSwagger = ["net.bytebuddy<>byte-buddy", "net.bytebuddy<>byte-buddy-agent", "io.swagger<>swagger-annotations", "io.swagger<>swagger-models"]

dependencies {
    /** Spring boot **/
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: 'org.mockito', module: 'mockito-core'
    }
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    /** Swagger **/
    api("io.springfox:springfox-swagger2:$swaggerVersion") {
        exclude group: "org.springframework"

        toExcludeFromSwagger.each {
            exclude group: "$it".split('<>')[0] as String, module: "$it".split('<>')[1] as String
        }
    }
    implementation("io.springfox.ui:springfox-swagger-ui-rfc6570:$swaggerRFCVersion") {
        exclude group: "org.springframework"

        toExcludeFromSwagger.each {
            exclude group: "$it".split('<>')[0] as String, module: "$it".split('<>')[1] as String
        }
    }
    api "io.swagger:swagger-annotations:$swaggerExcludedForNewestVersion"
    api "io.swagger:swagger-models:$swaggerExcludedForNewestVersion"

    implementation project(':core')
    implementation project(':db-mongo')
}